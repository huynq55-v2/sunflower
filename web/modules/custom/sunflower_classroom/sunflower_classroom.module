<?php

use Drupal\node\Entity\Node;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_presave().
 *
 * Triggered before a node is saved.
 */
function sunflower_classroom_entity_presave(EntityInterface $entity) {
  // Chỉ xử lý với content type "classroom" và "lesson".
  if ($entity->getEntityTypeId() !== 'node' || !in_array($entity->bundle(), ['classroom', 'lesson'])) {
    return;
  }

  // Nếu là node mới, Drupal chưa gán ID → xử lý sau khi insert.
  // Nếu là node đã tồn tại (edit) → tạo account ngay.
  if (!$entity->isNew()) {
    _sunflower_school_create_user_accounts($entity);
  }
}

/**
 * Implements hook_entity_insert().
 *
 * Triggered after a new node is saved.
 */
function sunflower_classroom_entity_insert(EntityInterface $entity) {
  // Chỉ xử lý với content type "classroom" và "lesson".
  if ($entity->getEntityTypeId() !== 'node' || !in_array($entity->bundle(), ['classroom', 'lesson'])) {
    return;
  }

  _sunflower_school_create_user_accounts($entity);
}

/**
 * Tạo tài khoản cho người dùng (học sinh và giáo viên) liên quan đến một lớp học.
 *
 * Hàm này được gọi khi một node 'classroom' hoặc 'lesson' được tạo/cập nhật.
 *
 * @param \Drupal\node\Entity\Node $entity
 *   Node được tạo hoặc cập nhật ('classroom' hoặc 'lesson').
 */
function _sunflower_school_create_user_accounts(Node $entity) {
  $users_to_process = [];
  $classroom_node = NULL;

  // Xác định content type và thu thập danh sách người dùng cần xử lý.
  $bundle = $entity->bundle();
  if ($bundle === 'classroom') {
    $classroom_node = $entity;
    // Lấy danh sách học sinh từ lớp học.
    if ($entity->hasField('field_student_list') && !$entity->get('field_student_list')->isEmpty()) {
      $users_to_process = array_merge($users_to_process, $entity->get('field_student_list')->referencedEntities());
    }
    // Lấy giáo viên từ lớp học.
    if ($entity->hasField('field_teacher') && !$entity->get('field_teacher')->isEmpty()) {
      $users_to_process[] = $entity->get('field_teacher')->entity;
    }
  } elseif ($bundle === 'lesson') {
    // Nếu là buổi học, lấy thông tin lớp học được tham chiếu.
    if ($entity->hasField('field_classroom') && !$entity->get('field_classroom')->isEmpty()) {
      $classroom_node = $entity->get('field_classroom')->entity;
      if ($classroom_node) {
        // Lấy danh sách học sinh từ buổi học.
        if ($entity->hasField('field_student_list') && !$entity->get('field_student_list')->isEmpty()) {
          $users_to_process = array_merge($users_to_process, $entity->get('field_student_list')->referencedEntities());
        }
        // Lấy giáo viên từ lớp học liên quan.
        if ($classroom_node->hasField('field_teacher') && !$classroom_node->get('field_teacher')->isEmpty()) {
          $users_to_process[] = $classroom_node->get('field_teacher')->entity;
        }
      }
    }
  }

  // Nếu không có thông tin lớp học hoặc không có người dùng nào thì dừng lại.
  if (!$classroom_node || empty($users_to_process)) {
    return;
  }

  $class_id = $classroom_node->id();
  $class_label = $classroom_node->label();

  // Loại bỏ các user bị trùng lặp.
  $unique_users = [];
  foreach ($users_to_process as $user) {
    if ($user) {
      $unique_users[$user->id()] = $user;
    }
  }

  // Duyệt qua danh sách người dùng và tạo tài khoản nếu chưa có.
  foreach ($unique_users as $user) {
    $uid = $user->id();
    $user_label = $user->label();

    // Kiểm tra xem tài khoản cho user này trong lớp học này đã tồn tại chưa.
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'account')
      ->condition('field_student', $uid) // Field này lưu User (cả học sinh và giáo viên)
      ->condition('field_classroom', $class_id)
      ->accessCheck(FALSE);
    $existing_accounts = $query->execute();

    if (empty($existing_accounts)) {
      // Nếu chưa tồn tại, tạo một node 'account' mới.
      $account = Node::create([
        'type' => 'account',
        'title' => "Tài khoản cho: " . $user_label . ' - Lớp: ' . $class_label,
        'field_student' => $uid,
        'field_classroom' => $class_id,
      ]);
      $account->save();

      \Drupal::logger('sunflower_classroom')->notice('Đã tạo tài khoản cho @user trong lớp @class', [
        '@user' => $user_label,
        '@class' => $class_label,
      ]);
    }
  }
}